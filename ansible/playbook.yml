---
- name: Installing Nginx server and configuring SSL, Grafana, pgAdmin
  hosts: all
  gather_facts: true
  gather_subset: [all, virtual]
  no_log: false
  vars:
    server: "{{ inventory_hostname }}"
    email: "{{ email }}"
    certificate_path: "/etc/letsencrypt/live/{{ domain }}/fullchain.pem"

  vars_files:
    - vars/common.yml

  tasks:

    - name: Install nginx and certbot
      ansible.builtin.apt:
        pkg:
          - nginx
          - certbot
        state: present
        update_cache: true

    - name: Check for existing certificate
      ansible.builtin.stat:
        path: "{{ certificate_path }}"
      register: cert_state

    - name: Set SSL fact
      ansible.builtin.set_fact:
        is_ssl: "{{ cert_state.stat.exists }}"

    - name: Deploy base nginx config
      ansible.builtin.template:
        src: "{{ base_conf }}"
        dest: /etc/nginx/

    - name: Deploy default nginx site config
      ansible.builtin.template:
        src: "{{ source }}"
        dest: /etc/nginx/conf.d/default.conf
        mode: '644'
        owner: root
        group: root
      vars:
        is_ssl: "{{ is_ssl != '' }}"

    - name: Deploy Grafana nginx config
      ansible.builtin.template:
        src: templates/nginx-grafana.conf.j2
        dest: /etc/nginx/conf.d/grafana.conf
        mode: '0644'

    - name: Deploy pgAdmin nginx config
      ansible.builtin.template:
        src: templates/nginx-pgadmin.conf.j2
        dest: /etc/nginx/conf.d/pgadmin.conf
        mode: '0644'

    - name: Create webroot directory for certbot
      ansible.builtin.file:
        path: /var/www/html/
        state: directory
        mode: '0755'

    - name: Forced restart of nginx
      ansible.builtin.service:
        name: nginx
        state: restarted

    - name: Obtain or renew SSL certificates for all domains
      ansible.builtin.shell:
        cmd: >-
          certbot certonly --webroot -w /var/www/html/
          {% for d in certbot_domains %}-d {{ d }} {% endfor %}
          --email {{ email }} --agree-tos --non-interactive
      register: certbot_output
      notify:
        - restart nginx
      when: not cert_state.stat.exists

    - name: Debug certbot output
      ansible.builtin.debug:
        var: certbot_output.stdout_lines

    - name: Ensure is_ssl is set to true
      ansible.builtin.set_fact:
        is_ssl: true

    - name: Redirect and 443 port
      ansible.builtin.template:
        src: "{{ source }}"
        dest: /etc/nginx/conf.d/default.conf
        mode: '644'
        owner: root
        group: root

    - name: Copy systemd daemons for certbot
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/daemons/"
        dest: /etc/systemd/system/
        mode: '644'
        owner: root
        group: root
        force: true

    - name: Enable and start certbot daemons
      ansible.builtin.service:
        name: certbot-semi-automatic
        enabled: true
        state: started

    - name: Enable and start certbot timer
      ansible.builtin.service:
        name: certbot-semi-automatic.timer
        enabled: true
        state: started

    - name: Final reload of nginx
      ansible.builtin.service:
        name: nginx
        state: restarted

  handlers:
    - import_tasks: handlers/main.yml