---
- name: Install & configure Nginx + SSL
  hosts: backend_servers
  become: true

  pre_tasks:
    - name: Update apt cache
      apt:
        update_cache: true

  tasks:
    - name: Ensure nginx & certbot packages are installed
      apt:
        name:
          - nginx
          - certbot
          - python3-certbot-nginx
        state: latest

    - name: Disable the default nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: Reload nginx

    - name: Render main nginx.conf
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
      notify: Reload nginx

    - name: Render site conf into sites-available
      template:
        src: default.conf.j2
        dest: /etc/nginx/sites-available/{{ domain }}.conf
        owner: root
        group: root
        mode: '0644'
      notify: Reload nginx

    - name: Enable site by symlinking to sites-enabled
      file:
        src: /etc/nginx/sites-available/{{ domain }}.conf
        dest: /etc/nginx/sites-enabled/{{ domain }}.conf
        state: link
      notify: Reload nginx

    - name: Ensure webroot directory for ACME challenges exists
      file:
        path: /var/www/html/.well-known/acme-challenge
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Check for existing Let's Encrypt certificate
      stat:
        path: /etc/letsencrypt/live/{{ domain }}/fullchain.pem
      register: cert

    - name: Redefine the variable is_ssl
      ansible.builtin.set_fact:
        is_ssl: true

    - name: Redirect and 443 port
      ansible.builtin.template:
        src: "{{ source }}"
        dest: /etc/nginx/conf.d/default.conf
        mode: '644'
        owner: root
        group: root

    - name: Copying systemd daemons of certbot
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/daemons/"
        dest: /etc/systemd/system/
        mode: '644'
        owner: root
        group: root
        force: true

    - name: launch its daemons
      ansible.builtin.service:
        name: certbot-semi-automatic
        enabled: true
        state: started

    - name: launch certbot's timer
      ansible.builtin.service:
        name: certbot-semi-automatic.timer
        enabled: true
        state: started

    - name: Restart nginx for the apllying configuration
      ansible.builtin.service:
        name: nginx
        state: restarted

  handlers:
    - name: Reload nginx
      service:
        name: nginx
        state: reloaded