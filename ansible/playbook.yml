---
- name: Install Nginx and configure Grafana/pgAdmin behind Jino
  hosts: all
  gather_facts: true
  collections:
    - community.general
  vars_files:
    - vars/common.yml

  tasks:
    - name: Install Nginx & UFW
      ansible.builtin.apt:
        pkg:
          - nginx
          - ufw
        state: present
        update_cache: true

    - name: Allow HTTP through UFW
      community.general.ufw:
        rule: allow
        port: 80
        proto: tcp

    # Clean up old vhosts in conf.d
    - name: Find existing vhost files in /etc/nginx/conf.d
      ansible.builtin.find:
        paths: /etc/nginx/conf.d
        patterns: '*.conf'
        recurse: false
      register: old_confd

    - name: Remove old conf.d vhost files
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ old_confd.files }}"

    # Clean up old symlinks in sites-enabled
    - name: Find existing vhost symlinks in /etc/nginx/sites-enabled
      ansible.builtin.find:
        paths: /etc/nginx/sites-enabled
        patterns: '*.conf'
        recurse: false
      register: old_enabled

    - name: Remove old sites-enabled symlinks
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ old_enabled.files }}"

    - name: Deploy main-site HTTP→app proxy
      ansible.builtin.template:
        src: templates/nginx-default-http.conf.j2
        dest: /etc/nginx/conf.d/default.conf
        mode: '0644'

    - name: Deploy Grafana HTTP→Grafana proxy
      ansible.builtin.template:
        src: templates/nginx-grafana-http.conf.j2
        dest: /etc/nginx/conf.d/grafana.conf
        mode: '0644'

    - name: Deploy pgAdmin HTTP→pgadmin proxy
      ansible.builtin.template:
        src: templates/nginx-pgadmin-http.conf.j2
        dest: /etc/nginx/conf.d/pgadmin.conf
        mode: '0644'

    - name: Ensure sites-enabled directory exists
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled
        state: directory

    - name: Find new vhost files in /etc/nginx/conf.d
      ansible.builtin.find:
        paths: /etc/nginx/conf.d
        patterns: '*.conf'
        recurse: false
      register: new_vhosts

    - name: Symlink vhosts into sites-enabled
      ansible.builtin.file:
        src: "{{ item.path }}"
        dest: "/etc/nginx/sites-enabled/{{ item.path | basename }}"
        state: link
      loop: "{{ new_vhosts.files }}"

    - name: Test Nginx configuration
      ansible.builtin.command: nginx -t
      register: nginx_test
      changed_when: false
      failed_when: nginx_test.rc != 0

    - name: Reload Nginx if config is ok
      ansible.builtin.service:
        name: nginx
        state: reloaded